/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(vocoder.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(6f5e665b6482d7f4d3874d01016ca78f)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/op25_repeater/vocoder.h>
// pydoc.h is automatically generated in the build directory
#include <vocoder_pydoc.h>

void bind_vocoder(py::module& m)
{

    using vocoder    = ::gr::op25_repeater::vocoder;


    py::class_<vocoder, gr::block, gr::basic_block,
        std::shared_ptr<vocoder>>(m, "vocoder", D(vocoder))

        .def(py::init(&vocoder::make),
           py::arg("encode_flag"),
           py::arg("verbose_flag"),
           py::arg("stretch_amt"),
           py::arg("udp_host"),
           py::arg("udp_port"),
           py::arg("raw_vectors_flag"),
           D(vocoder,make)
        )
        




        
        .def("set_gain_adjust",&vocoder::set_gain_adjust,       
            py::arg("gain_adjust"),
            D(vocoder,set_gain_adjust)
        )

        ;




}








