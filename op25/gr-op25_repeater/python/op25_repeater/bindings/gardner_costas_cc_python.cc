/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(gardner_costas_cc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(1db69b6b8e5de53c7187101bb4cdcb84)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/op25_repeater/gardner_costas_cc.h>
// pydoc.h is automatically generated in the build directory
#include <gardner_costas_cc_pydoc.h>

void bind_gardner_costas_cc(py::module& m)
{

    using gardner_costas_cc    = ::gr::op25_repeater::gardner_costas_cc;


    py::class_<gardner_costas_cc, gr::block, gr::basic_block,
        std::shared_ptr<gardner_costas_cc>>(m, "gardner_costas_cc", D(gardner_costas_cc))

        .def(py::init(&gardner_costas_cc::make),
           py::arg("samples_per_symbol"),
           py::arg("gain_mu"),
           py::arg("gain_omega"),
           py::arg("alpha"),
           py::arg("beta"),
           py::arg("max_freq"),
           py::arg("min_freq"),
           D(gardner_costas_cc,make)
        )
        




        
        .def("set_omega",&gardner_costas_cc::set_omega,       
            py::arg("omega"),
            D(gardner_costas_cc,set_omega)
        )


        
        .def("get_freq_error",&gardner_costas_cc::get_freq_error,       
            D(gardner_costas_cc,get_freq_error)
        )


        
        .def("get_error_band",&gardner_costas_cc::get_error_band,       
            D(gardner_costas_cc,get_error_band)
        )


        
        .def("reset",&gardner_costas_cc::reset,       
            D(gardner_costas_cc,reset)
        )

        ;




}








