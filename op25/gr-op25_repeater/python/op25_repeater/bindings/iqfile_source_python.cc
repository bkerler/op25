/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(iqfile_source.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(e1fc46ffa46be9f7410c94aaf51c1e6a)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/op25_repeater/iqfile_source.h>
// pydoc.h is automatically generated in the build directory
#include <iqfile_source_pydoc.h>

void bind_iqfile_source(py::module& m)
{

    using iqfile_source    = ::gr::op25_repeater::iqfile_source;


    py::class_<iqfile_source, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<iqfile_source>>(m, "iqfile_source", D(iqfile_source))

        .def(py::init(&iqfile_source::make),
           py::arg("itemsize"),
           py::arg("filename"),
           py::arg("iq_signed") = false,
           py::arg("offset") = 0,
           py::arg("len") = 0,
           D(iqfile_source,make)
        )
        




        
        .def("seek",&iqfile_source::seek,       
            py::arg("seek_point"),
            py::arg("whence"),
            D(iqfile_source,seek)
        )


        
        .def("open",&iqfile_source::open,       
            py::arg("filename"),
            py::arg("repeat"),
            py::arg("offset") = 0,
            py::arg("len") = 0,
            D(iqfile_source,open)
        )


        
        .def("close",&iqfile_source::close,       
            D(iqfile_source,close)
        )


        
        .def("set_begin_tag",&iqfile_source::set_begin_tag,       
            py::arg("val"),
            D(iqfile_source,set_begin_tag)
        )


        
        .def("is_dsd",&iqfile_source::is_dsd,       
            D(iqfile_source,is_dsd)
        )


        
        .def("get_dsd_rate",&iqfile_source::get_dsd_rate,       
            D(iqfile_source,get_dsd_rate)
        )


        
        .def("get_dsd_freq",&iqfile_source::get_dsd_freq,       
            D(iqfile_source,get_dsd_freq)
        )


        
        .def("get_dsd_ts",&iqfile_source::get_dsd_ts,       
            D(iqfile_source,get_dsd_ts)
        )

        ;




}








