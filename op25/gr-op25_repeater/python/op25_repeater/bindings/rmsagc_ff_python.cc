/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(rmsagc_ff.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(b7e9da846151ace63502dc857ca72b85)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/op25_repeater/rmsagc_ff.h>
// pydoc.h is automatically generated in the build directory
#include <rmsagc_ff_pydoc.h>

void bind_rmsagc_ff(py::module& m)
{

    using rmsagc_ff    = ::gr::op25_repeater::rmsagc_ff;


    py::class_<rmsagc_ff, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<rmsagc_ff>>(m, "rmsagc_ff", D(rmsagc_ff))

        .def(py::init(&rmsagc_ff::make),
           py::arg("alpha") = 0.01,
           py::arg("k") = 1.,
           D(rmsagc_ff,make)
        )
        




        
        .def("set_alpha",&rmsagc_ff::set_alpha,       
            py::arg("alpha"),
            D(rmsagc_ff,set_alpha)
        )


        
        .def("set_k",&rmsagc_ff::set_k,       
            py::arg("k"),
            D(rmsagc_ff,set_k)
        )

        ;




}








